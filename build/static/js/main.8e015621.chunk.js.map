{"version":3,"sources":["utils/config.js","reducers/user_reducer.js","reducers/notification_reducer.js","components/notification_component.js","components/navbar_component.js","hooks/use_field.js","services/login_service.js","components/login_form_component.js","services/users_service.js","components/register_form_component.js","utils/helper.js","components/recipe_form_component.js","services/recipes_service.js","components/new_recipe_form_component.js","components/edit_recipe_form_component.js","components/recipe_list_component.js","components/lastest_recipes_page_component.js","components/recipe_view_component.js","components/recipe_view_by_id_component.js","app.js","store.js","index.js"],"names":["require","config","loggedRecipeAppUserKey","actionTypeSetUser","actionTypeSetToken","initialState","user","token","setUserAndToken","dispatch","a","window","localStorage","setItem","JSON","stringify","removeItem","type","data","userReducer","state","action","actionTypeSetType","actionTypeMessage","actionTypeHide","notificationTypeError","notificationTypeConfirm","notificationTypeHide","currentTimeoutId","message","setNotification","timeout","clearTimeout","setTimeout","notificationReducer","Notification","props","notificationState","useSelector","notification","Alert","variant","NavBar","useDispatch","userState","padding","Navbar","collapseOnSelect","expand","bg","Toggle","Collapse","id","Nav","className","Link","href","as","style","to","onClick","useField","defaultValue","useState","value","setValue","onChange","event","target","baseUrl","credentials","axios","post","response","loginService","login","LoginForm","history","useHistory","usernameField","passwordField","preventDefault","newLoginRequest","username","password","handleLogin","push","displayName","Form","onSubmit","Group","Label","Control","name","Button","marginTop","usersService","register","RegisterForm","displayNameField","newRegisterRequest","handleRegister","helper","tryParseInt","string","parsedValue","parseInt","isNaN","tryParseFloat","parseFloat","getDifficultyText","difficulty","ingredientFieldName","ingredientFieldQuantity","ingredientFieldUnit","stepFieldDescription","stepFieldWarning","stepFieldTip","initialIngredient","quantity","unit","imagePath","initialStep","description","warning","tip","RecipeForm","handleSubmit","recipe","nameField","shortDescriptionField","shortDescription","descriptionField","difficultyField","toString","estimatedMinutesField","estimatedMinutes","ingredients","setIngredients","steps","setSteps","newSubmitRequest","handleIngredientChange","index","dataField","newIngredients","handleIngredientRemove","splice","length","handleStepChange","newSteps","handleStepRemove","Row","column","sm","Col","min","map","ingredient","placeholder","bind","concat","step","pageNumber","get","newRecipe","headers","Authorization","generateAuthorizationString","put","delete","recipesService","getLastestRecipePagination","getPopularRecipePagination","getRecipeById","create","update","remove","NewRecipeForm","EditRecipeForm","recipeId","useParams","setRecipe","allowToEdit","setAllowToEdit","isLoading","setIsLoading","useEffect","recipeResult","RecipeListItem","Card","Body","Title","Subtitle","Text","ListGroup","ListGroupItem","RecipeList","recipes","xs","md","lg","LastestRecipesPage","page_number","prevPageNumber","setPrevPageNumber","nextPageNumber","setNextPageNumber","setRecipes","resultPagination","pagination","resultList","results","pagePrev","pageNext","handleIngredientConcat","RecipeView","Table","striped","bordered","hover","RecipeViewById","confirm","App","loggedUserJSON","getItem","parse","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e015621.chunk.js","sourcesContent":["require('dotenv').config();\n\nconst loggedRecipeAppUserKey = 'loggedRecipeAppUser';\n\nconst config = {\n  loggedRecipeAppUserKey,\n};\n\nexport default config;\n","import config from '../utils/config';\n\nconst actionTypeSetUser = 'USER_SET_USER';\nconst actionTypeSetToken = 'USER_SET_TOKEN';\nconst initialState = {\n  user: null,\n  token: null,\n};\n\n/**\n * Reducer function for user\n * @param {Object} state - currentstate of notification\n * @param {Object} action - action for this reducer\n * @return {Object} - a new state\n */\nfunction userReducer(state = initialState, action) {\n  switch (action.type) {\n  case actionTypeSetUser:\n    return {\n      ...state,\n      user: action.data.user,\n    };\n  case actionTypeSetToken:\n    return {\n      ...state,\n      token: action.data.token,\n    };\n  default:\n    return state;\n  }\n}\n\n/**\n * Set user by using token\n * @param {Object} user - user\n * @param {Object} token - token\n * @return {Function} - function for dispatch redux action\n */\nexport function setUserAndToken(user, token) {\n  return async (dispatch) => {\n    if (user) {\n      window.localStorage.setItem(\n        config.loggedRecipeAppUserKey,\n        JSON.stringify(user),\n      );\n    } else {\n      window.localStorage.removeItem(config.loggedRecipeAppUserKey);\n    }\n\n    dispatch({\n      type: actionTypeSetUser,\n      data: { user: user },\n    });\n    dispatch({\n      type: actionTypeSetToken,\n      data: { token: token },\n    });\n  };\n}\n\n/**\n * Set user by using token\n * @return {Function} - function for dispatch redux action\n */\nexport function initializeUserAndToken() {\n  return async (dispatch) => {\n    const loggedUserJSON =\n      window.localStorage.getItem(config.loggedRecipeAppUserKey);\n\n    const user = loggedUserJSON ? JSON.parse(loggedUserJSON) : null;\n    const token = user ? user.token : null;\n    dispatch({\n      type: actionTypeSetUser,\n      data: { user: user },\n    });\n    dispatch({\n      type: actionTypeSetToken,\n      data: { token: token },\n    });\n  };\n};\n\nexport default userReducer;\n","const actionTypeSetType = 'NOTIFICATION_SET_TYPE';\nconst actionTypeMessage = 'NOTIFICATION_MESSAGE';\nconst actionTypeHide = 'NOTIFICATION_HIDE';\n\nexport const notificationTypeError = 'danger';\nexport const notificationTypeConfirm = 'success';\nexport const notificationTypeHide = 'TYPE_HIDE';\n\nlet currentTimeoutId = null;\n\nconst initialState = {\n  type: notificationTypeHide,\n  message: '',\n};\n\n/**\n * Reducer function for notification\n * @param {Object} state - currentstate of notification\n * @param {Object} action - action for this reducer\n * @return {Object} - a new state\n */\nfunction notificationReducer(state = initialState, action) {\n  switch (action.type) {\n  case actionTypeSetType:\n    return {\n      ...state,\n      type: action.data.type,\n    };\n  case actionTypeMessage:\n    return {\n      ...state,\n      message: action.data.message,\n    };\n  case actionTypeHide:\n    return {\n      ...state,\n      message: '',\n      type: notificationTypeHide,\n    };\n  default:\n    return state;\n  }\n}\n\n/**\n * Set notification\n * @param {String} message - notification message\n * @param {String} type - notification type\n * @param {Int} timeout - time (in millisecond) until hiding notification\n * @return {Function} - function for dispatch redux action\n */\nexport function setNotification(\n  message,\n  type = notificationTypeConfirm,\n  timeout = 10000) {\n  return async (dispatch) => {\n    clearTimeout(currentTimeoutId);\n\n    dispatch({\n      type: actionTypeSetType,\n      data: { type: type },\n    });\n    dispatch({\n      type: actionTypeMessage,\n      data: { message: message },\n    });\n\n    currentTimeoutId = await setTimeout(() => {\n      dispatch({\n        type: actionTypeSetType,\n        data: { type: notificationTypeHide },\n      });\n    }, timeout);\n  };\n}\n\nexport default notificationReducer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport { notificationTypeHide } from '../reducers/notification_reducer';\n\n/**\n * Notification component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of notification component\n */\nfunction Notification(props) {\n  const notificationState = useSelector((state) => {\n    return state.notification;\n  });\n\n  return (\n    <div>\n      {\n        notificationState.type === notificationTypeHide ?\n          <></> :\n          <Alert variant={notificationState.type}>\n            {notificationState.message}\n          </Alert>\n      }\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  setNotification,\n  notificationTypeError,\n  notificationTypeConfirm,\n} from '../reducers/notification_reducer';\nimport {\n  setUserAndToken,\n} from '../reducers/user_reducer';\n\n/**\n * Navigation bar component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of navigation bar component\n */\nfunction NavBar(props) {\n  const dispatch = useDispatch();\n  const userState = useSelector((state) => {\n    return state.user;\n  });\n\n  /**\n   * Handle logout request\n   * @return {Boolean} login result\n   */\n  async function handleLogout() {\n    try {\n      dispatch(setUserAndToken(null, null));\n      setNotification(\n        'Logout success. Goodbye.',\n        notificationTypeConfirm,\n      );\n      return true;\n    } catch (exception) {\n      setNotification(\n        'Logout failed. Please contact developer.',\n        notificationTypeError,\n      );\n      return false;\n    }\n  }\n\n  const padding = {\n    padding: 5,\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/\">Home</Link>\n          </Nav.Link>\n          <Nav.Link href=\"#\" as=\"span\">\n            <Link style={padding} to=\"/lastest-recipe/1\">Lastest recipes</Link>\n          </Nav.Link>\n          {userState.user ?\n            <>\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/new-recipe\">New recipe</Link>\n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to='/' onClick={handleLogout}>\n                  Logout\n                </Link>\n              </Nav.Link>\n            </> :\n            <>\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/login\">Login</Link>\n              </Nav.Link>\n            </>\n          }\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import { useState } from 'react';\n\n/**\n * hook for input field.\n * @param {String} type - type of input field\n * @param {Any} defaultValue - default value\n * @return {Object} object of input field hook\n */\nfunction useField(type, defaultValue = '') {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return {\n    type,\n    value,\n    onChange,\n    setValue,\n  };\n}\n\nexport default useField;\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\n/**\n * Login to website by using credentials\n * @param {Object} credentials - object that contain username and password\n * @return {Object} response data\n */\nasync function login(credentials) {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n}\n\nconst loginService = {\n  login,\n};\n\nexport default loginService;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nimport useField from '../hooks/use_field';\n\nimport {\n  setNotification,\n  notificationTypeError,\n  notificationTypeConfirm,\n} from '../reducers/notification_reducer';\nimport {\n  setUserAndToken,\n} from '../reducers/user_reducer';\n\nimport loginService from '../services/login_service';\n\n/**\n * Login form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of login form component\n */\nfunction LoginForm(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const usernameField = useField('text');\n  const passwordField = useField('password');\n\n  /**\n   * Handle form submit event\n   * @param {Event} event - html event\n  */\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const newLoginRequest = {\n      username: usernameField.value,\n      password: passwordField.value,\n    };\n    const result = await handleLogin(newLoginRequest);\n\n    if (result) {\n      history.push('/');\n    }\n  }\n\n  /**\n   * Handle login request\n   * @param {Object} newLoginRequest - login request object\n   * @return {Boolean} login result\n   */\n  async function handleLogin(newLoginRequest) {\n    try {\n      const user = await loginService.login(newLoginRequest);\n      dispatch(setUserAndToken(user, user.token));\n      dispatch(setNotification(\n        `Login success. Welcome, ${user.displayName}.`,\n        notificationTypeConfirm,\n      ));\n      return true;\n    } catch (exception) {\n      dispatch(setNotification(\n        'Login failed. Please check your username and password',\n        notificationTypeError,\n      ));\n      return false;\n    }\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group >\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type={usernameField.type}\n            name='username'\n            value={usernameField.value}\n            onChange={usernameField.onChange}\n          />\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type={passwordField.type}\n            name='password'\n            value={passwordField.value}\n            onChange={passwordField.onChange}\n          />\n        </Form.Group>\n        <Button\n          variant='primary'\n          type='submit'\n          style={{ marginTop: 5 }}\n        >\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\n/**\n * Register to website by using credentials\n * @param {Object} credentials - object that contain username,\n *                                display name, and password\n * @return {Object} response data\n */\nasync function register(credentials) {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n}\n\nconst usersService = {\n  register,\n};\n\nexport default usersService;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nimport useField from '../hooks/use_field';\n\nimport {\n  setNotification,\n  notificationTypeError,\n  notificationTypeConfirm,\n} from '../reducers/notification_reducer';\n\nimport usersService from '../services/users_service';\n\n/**\n * Register form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of register form component\n */\nfunction RegisterForm(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const usernameField = useField('text');\n  const displayNameField = useField('text');\n  const passwordField = useField('password');\n\n  /**\n   * Handle form submit event\n   * @param {Event} event - html event\n  */\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const newRegisterRequest = {\n      username: usernameField.value,\n      displayName: displayNameField.value,\n      password: passwordField.value,\n    };\n    const result = await handleRegister(newRegisterRequest);\n\n    if (result) {\n      usernameField.setValue('');\n      displayNameField.setValue('');\n      passwordField.setValue('');\n      history.push('/login');\n    }\n  }\n\n  /**\n   * Handle register request\n   * @param {Object} newRegisterRequest - register request object\n   * @return {Boolean} register result\n   */\n  async function handleRegister(newRegisterRequest) {\n    try {\n      await usersService.register(newRegisterRequest);\n      dispatch(setNotification(\n        'Register success. Please login to continue.',\n        notificationTypeConfirm,\n      ));\n      return true;\n    } catch (exception) {\n      dispatch(setNotification(\n        'Register failed. Username might already existed.',\n        notificationTypeError,\n      ));\n      return false;\n    }\n  }\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group >\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type={usernameField.type}\n            name='username'\n            value={usernameField.value}\n            onChange={usernameField.onChange}\n          />\n          <Form.Label>Display name</Form.Label>\n          <Form.Control\n            type={displayNameField.type}\n            name='displayName'\n            value={displayNameField.value}\n            onChange={displayNameField.onChange}\n          />\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type={passwordField.type}\n            name='password'\n            value={passwordField.value}\n            onChange={passwordField.onChange}\n          />\n        </Form.Group>\n        <Button\n          variant='primary'\n          type='submit'\n        >\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","/** Try parsing string to int, return defaultValue if failed\n * @param {String} string - string to parse\n * @param {Int} defaultValue - default value if parsing failed\n * @return {Int} parsed value\n*/\nfunction tryParseInt(string, defaultValue) {\n  let parsedValue = parseInt(string);\n  if (isNaN(parsedValue)) {\n    parsedValue = defaultValue;\n  }\n\n  return parsedValue;\n}\n\n/** Try parsing string to float, return defaultValue if failed\n * @param {String} string - string to parse\n * @param {Float} defaultValue - default value if parsing failed\n * @return {Float} parsed value\n*/\nfunction tryParseFloat(string, defaultValue) {\n  let parsedValue = parseFloat(string);\n  if (isNaN(parsedValue)) {\n    parsedValue = defaultValue;\n  }\n\n  return parsedValue;\n}\n\n/**\n   * Get difficulty text\n   * @param {Int} difficulty - component arguments\n   * @return {String} difficulty text\n   */\nfunction getDifficultyText(difficulty) {\n  switch (difficulty) {\n  case 1:\n    return 'Very easy';\n  case 2:\n    return 'Easy';\n  case 3:\n    return 'Medium';\n  case 4:\n    return 'Hard';\n  case 5:\n    return 'Very hard';\n  default:\n    return 'Not specified';\n  }\n}\n\nconst helper = {\n  tryParseInt,\n  tryParseFloat,\n  getDifficultyText,\n};\n\nexport default helper;\n","import React from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useField from '../hooks/use_field';\nimport helper from '../utils/helper';\n\nconst ingredientFieldName = 'ingredientFieldName';\nconst ingredientFieldQuantity = 'ingredientFieldQuantity';\nconst ingredientFieldUnit = 'ingredientFieldUnit';\nconst ingredientFieldImagePath = 'ingredientFieldImagePath';\n\nconst stepFieldDescription = 'stepFieldDescription';\nconst stepFieldWarning = 'stepFieldWarning';\nconst stepFieldTip = 'stepFieldTip';\nconst stepFieldImagePath = 'stepFieldImagePath';\n\nconst initialIngredient = {\n  name: '',\n  quantity: 0,\n  unit: '',\n  imagePath: '/',\n};\nconst initialStep = {\n  description: '',\n  warning: '',\n  tip: '',\n  imagePath: '/',\n};\n\n/**\n * Recipe form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of recipe form component\n */\nfunction RecipeForm({ handleSubmit, recipe }) {\n  const nameField = useField('text',\n    recipe ? recipe.name : '');\n  const shortDescriptionField = useField('text',\n    recipe ? recipe.shortDescription : '');\n  const descriptionField = useField('text',\n    recipe ? recipe.description : '');\n  const difficultyField = useField('text',\n    recipe ? recipe.difficulty.toString() : '3');\n  const estimatedMinutesField = useField('number',\n    recipe ? recipe.estimatedMinutes : 0);\n  const [ingredients, setIngredients] = useState(\n    recipe ? recipe.ingredients: [{ ...initialIngredient }]);\n  const [steps, setSteps] = useState(\n    recipe ? recipe.steps: [{ ...initialStep }]);\n\n  /**\n   * Handle submit request\n   * @param {Object} newSubmitRequest - register request object\n   */\n  async function handleSubmitRecipe(newSubmitRequest) {\n    newSubmitRequest.preventDefault();\n    const recipe = {\n      name: nameField.value,\n      imagePath: '/',\n      shortDescription: shortDescriptionField.value,\n      description: descriptionField.value,\n      difficulty: helper.tryParseInt(difficultyField.value, 1),\n      estimatedMinutes: helper.tryParseInt(estimatedMinutesField.value, 0),\n      ingredients: ingredients,\n      steps: steps,\n    };\n    await handleSubmit(recipe);\n  }\n\n  /**\n   * Handle ingredient value change\n   * @param {Int} index - ingredient index\n   * @param {String} dataField - change data field\n   * @param {Event} event - html event\n   */\n  function handleIngredientChange(index, dataField, event) {\n    const newIngredients = [...ingredients];\n    const value = event.target.value;\n\n    switch (dataField) {\n    case ingredientFieldName:\n      newIngredients[index].name = value;\n      break;\n    case ingredientFieldQuantity:\n      newIngredients[index].quantity =\n        helper.tryParseFloat(value, 1);\n      break;\n    case ingredientFieldUnit:\n      newIngredients[index].unit = value;\n      break;\n    case ingredientFieldImagePath:\n      newIngredients[index].imagePath = value;\n      break;\n    default:\n      break;\n    }\n\n    setIngredients(newIngredients);\n  }\n\n  /**\n   * Handle concat ingredient\n   * @param {Event} event - html event\n   */\n  function handleIngredientConcat(event) {\n    const newIngredients = ingredients.concat({ ...initialIngredient });\n    setIngredients(newIngredients);\n  }\n\n  /**\n   * Handle remove ingredient\n   * @param {Int} index - ingredient index\n   * @param {Event} event - html event\n   */\n  function handleIngredientRemove(index, event) {\n    const newIngredients = [...ingredients];\n    newIngredients.splice(index, 1);\n\n    if (newIngredients.length === 0) {\n      newIngredients.push({ ...initialIngredient });\n    }\n\n    setIngredients(newIngredients);\n  }\n\n  /**\n   * Handle step value change\n   * @param {Int} index - step index\n   * @param {String} dataField - change data field\n   * @param {Event} event - html event\n   */\n  function handleStepChange(index, dataField, event) {\n    const newSteps = [...steps];\n    const value = event.target.value;\n\n    switch (dataField) {\n    case stepFieldDescription:\n      newSteps[index].description = value;\n      break;\n    case stepFieldWarning:\n      newSteps[index].warning = value;\n      break;\n    case stepFieldTip:\n      newSteps[index].tip = value;\n      break;\n    case stepFieldImagePath:\n      newSteps[index].imagePath = value;\n      break;\n    default:\n      break;\n    }\n\n    setSteps(newSteps);\n  }\n\n  /**\n   * Handle concat step\n   * @param {Event} event - html event\n   */\n  function handleStepConcat(event) {\n    const newSteps = steps.concat({ ...initialStep });\n    setSteps(newSteps);\n  }\n\n  /**\n   * Handle remove step\n   * @param {Int} index - ingredient index\n   * @param {Event} event - html event\n   */\n  function handleStepRemove(index, event) {\n    const newSteps = [...steps];\n    newSteps.splice(index, 1);\n\n    if (newSteps.length === 0) {\n      newSteps.push({ ...initialStep });\n    }\n\n    setSteps(newSteps);\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmitRecipe}>\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2}>\n            Recipe name\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type={nameField.type}\n              name='name'\n              value={nameField.value}\n              onChange={nameField.onChange}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2}>\n            Short description\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type={shortDescriptionField.type}\n              name='shortDescription'\n              value={shortDescriptionField.value}\n              onChange={shortDescriptionField.onChange}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2}>\n            Description\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as='textarea'\n              name='description'\n              value={descriptionField.value}\n              onChange={descriptionField.onChange}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2}>\n            Difficulty\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as='select'\n              name='difficulty'\n              value={difficultyField.value}\n              onChange={difficultyField.onChange}\n            >\n              <option value='1'>Very easy</option>\n              <option value='2'>Easy</option>\n              <option value='3'>Normal</option>\n              <option value='4'>Hard</option>\n              <option value='5'>Very hard</option>\n            </Form.Control>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2}>\n            Estimated time (minutes)\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type={estimatedMinutesField.type}\n              name='estimatedMinutes'\n              value={estimatedMinutesField.value}\n              onChange={estimatedMinutesField.onChange}\n              min=\"0\"\n            />\n          </Col>\n        </Form.Group>\n        { ingredients.map( (ingredient, index) => {\n          return (\n            <Form.Group as={Row} className=\"mb-3\" key={`ingredient${index}`}>\n              <Form.Label column sm={2}>\n                {index === 0 ? 'Ingredients': ''}\n              </Form.Label>\n              <Col sm={4}>\n                <Form.Control\n                  type='text'\n                  name={`ingredientName${index}`}\n                  value={ingredient.name}\n                  placeholder=\"Name\"\n                  onChange={handleIngredientChange.bind(\n                    null, index, ingredientFieldName)}\n                />\n              </Col>\n              <Col sm={2}>\n                <Form.Control\n                  type='number'\n                  name={`ingredientQuantity${index}`}\n                  value={ingredient.quantity}\n                  min='0'\n                  placeholder=\"Quantity\"\n                  onChange={handleIngredientChange.bind(\n                    null, index, ingredientFieldQuantity)}\n                />\n              </Col>\n              <Col sm={2}>\n                <Form.Control\n                  type='text'\n                  name={`ingredientUnit${index}`}\n                  value={ingredient.unit}\n                  placeholder=\"Unit\"\n                  onChange={handleIngredientChange.bind(\n                    null, index, ingredientFieldUnit)}\n                />\n              </Col>\n              <Col sm={2}>\n                <div className=\"d-grid gap-2\">\n                  <Button\n                    variant='danger'\n                    onClick={handleIngredientRemove.bind(null, index)}\n                  >\n                    Remove\n                  </Button>\n                </div>\n              </Col>\n            </Form.Group>\n          );\n        })}\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2} />\n          <Col sm={10}>\n            <div className=\"d-grid gap-2\">\n              <Button\n                variant='success'\n                onClick={handleIngredientConcat}\n              >\n                Add new ingredient.\n              </Button>\n            </div>\n          </Col>\n        </Form.Group>\n        { steps.map( (step, index) => {\n          return (\n            <div key={`step${index}`}>\n              <Form.Group as={Row} className=\"mb-3\" >\n                <Form.Label column sm={2}>\n                  {index === 0 ? 'Steps': ''}\n                </Form.Label>\n                <Form.Label column sm={2}>\n                  {`Step ${index + 1}`}\n                </Form.Label>\n                <Col sm={6}>\n                  <Form.Control\n                    as='textarea'\n                    name={`stepDescription${index}`}\n                    value={step.description}\n                    onChange={handleStepChange.bind(\n                      null, index, stepFieldDescription)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" >\n                <Form.Label column sm={2} />\n                <Form.Label column sm={2}>\n                  Tip\n                </Form.Label>\n                <Col sm={6}>\n                  <Form.Control\n                    as='textarea'\n                    name={`stepTip${index}`}\n                    value={step.tip}\n                    onChange={handleStepChange.bind(\n                      null, index, stepFieldTip)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" >\n                <Form.Label column sm={2} />\n                <Form.Label column sm={2}>\n                  Warning\n                </Form.Label>\n                <Col sm={6}>\n                  <Form.Control\n                    as='textarea'\n                    name={`stepWarning${index}`}\n                    value={step.warning}\n                    onChange={handleStepChange.bind(\n                      null, index, stepFieldWarning)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <div className=\"d-grid gap-2\">\n                    <Button\n                      variant='danger'\n                      onClick={handleStepRemove.bind(null, index)}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                </Col>\n              </Form.Group>\n            </div>\n          );\n        })}\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column sm={2} />\n          <Col sm={10}>\n            <div className=\"d-grid gap-2\">\n              <Button\n                variant='success'\n                onClick={handleStepConcat}\n              >\n                Add new step.\n              </Button>\n            </div>\n          </Col>\n        </Form.Group>\n        <Button\n          variant='primary'\n          type='submit'\n        >\n          Save\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nRecipeForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  recipe: PropTypes.any.isRequired,\n};\n\nexport default RecipeForm;\n","import axios from 'axios';\nconst baseUrl = '/api/recipes';\n\n/**\n * Get lastest recipe\n * @param {Int} pageNumber - page number\n * @return {Object} response data\n */\nasync function getLastestRecipePagination(pageNumber = 1) {\n  const response =\n    await axios.get(`${baseUrl}?lastest=true&page=${pageNumber}`);\n  return response.data;\n}\n\n/**\n * Get popular recipe\n * @param {Int} pageNumber - page number\n * @return {Object} response data\n */\nasync function getPopularRecipePagination(pageNumber = 1) {\n  const response =\n    await axios.get(`${baseUrl}?popular=true&page=${pageNumber}`);\n  return response.data;\n}\n\n/**\n * Get recipe by id\n * @param {Int} id - recipe id\n * @return {Object} response data\n */\nasync function getRecipeById(id) {\n  const response =\n    await axios.get(`${baseUrl}/id/${id}`);\n  return response.data;\n}\n\n/**\n * Create new recipe and save to database\n * @param {Object} newRecipe - new recipe\n * @param {String} token - user token\n * @return {Object} response data\n */\nasync function create(newRecipe, token) {\n  const config = {\n    headers: { Authorization: generateAuthorizationString(token) },\n  };\n\n  const response = await axios.post(baseUrl, newRecipe, config);\n  return response.data;\n}\n\n/**\n * Update recipe and save to database\n * @param {String} id - recipe id\n * @param {Object} recipe - recipe\n * @param {String} token - user token\n * @return {Object} response data\n */\nasync function update(id, recipe, token) {\n  const config = {\n    headers: { Authorization: generateAuthorizationString(token) },\n  };\n\n  const response = await axios.put(`${baseUrl}/id/${id}`, recipe, config);\n  return response.data;\n}\n\n/**\n * Delete recipe from database\n * @param {String} id - recipe id\n * @param {String} token - user token\n * @return {Object} response data\n */\nasync function remove(id, token) {\n  const config = {\n    headers: { Authorization: generateAuthorizationString(token) },\n  };\n\n  const response = await axios.delete(`${baseUrl}/id/${id}`, config);\n  return response.data;\n}\n\n/**\n * Generate autorization string from token\n * @param {String} token - user token\n * @return {String} autorization string\n */\nfunction generateAuthorizationString(token) {\n  return `bearer ${token}`;\n}\n\nconst recipesService = {\n  getLastestRecipePagination,\n  getPopularRecipePagination,\n  getRecipeById,\n  create,\n  update,\n  remove,\n};\n\nexport default recipesService;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport RecipeForm from './recipe_form_component';\n\nimport recipesService from '../services/recipes_service';\n\nimport {\n  setNotification,\n  notificationTypeError,\n  notificationTypeConfirm,\n} from '../reducers/notification_reducer';\n/**\n * New recipe form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of new recipe form component\n */\nfunction NewRecipeForm(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userState = useSelector((state) => {\n    return state.user;\n  });\n\n  /**\n   * Handle submit request\n   * @param {Object} recipe - recipe\n   * @return {Boolean} register result\n   */\n  async function handleSubmit(recipe) {\n    try {\n      await recipesService.create(recipe, userState.token);\n      dispatch(setNotification(\n        `Recipe \"${recipe.name}\" created!`,\n        notificationTypeConfirm,\n      ));\n      history.push('/');\n      return true;\n    } catch (exception) {\n      dispatch(setNotification(\n        `Failed to create recipe \"${recipe.name}\". ${exception.toString()}`,\n        notificationTypeError,\n      ));\n      return false;\n    }\n  }\n\n  return (\n    <div>\n      <h2>New Recipe</h2>\n      <RecipeForm\n        handleSubmit={handleSubmit}\n        recipe={false}\n      />\n    </div>\n  );\n}\n\nexport default NewRecipeForm;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport RecipeForm from './recipe_form_component';\n\nimport recipesService from '../services/recipes_service';\n\nimport {\n  setNotification,\n  notificationTypeError,\n  notificationTypeConfirm,\n} from '../reducers/notification_reducer';\n/**\n * New recipe form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of new recipe form component\n */\nfunction EditRecipeForm(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userState = useSelector((state) => {\n    return state.user;\n  });\n\n  const recipeId = useParams().id;\n  const [recipe, setRecipe] = useState(null);\n  const [allowToEdit, setAllowToEdit] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(async () => {\n    setIsLoading(true);\n\n    const recipeResult =\n      await recipesService.getRecipeById(recipeId);\n    setRecipe(recipeResult);\n    setAllowToEdit(!!(userState.user &&\n      userState.user.id === recipeResult.user.id));\n\n    setIsLoading(false);\n  }, [recipeId, userState]);\n\n  /**\n   * Handle submit request\n   * @param {Object} recipe - recipe\n   * @return {Boolean} register result\n   */\n  async function handleSubmit(recipe) {\n    try {\n      await recipesService.update(recipeId, recipe, userState.token);\n      dispatch(setNotification(\n        `Recipe \"${recipe.name}\" updated!`,\n        notificationTypeConfirm,\n      ));\n      history.push('/');\n      return true;\n    } catch (exception) {\n      dispatch(setNotification(\n        `Failed to updated recipe \"${recipe.name}\". ${exception.toString()}`,\n        notificationTypeError,\n      ));\n      return false;\n    }\n  }\n\n  return (\n    <div>\n      { isLoading ?\n        <p>Loading...</p> :\n        allowToEdit ?\n          <div>\n            <h2>Edit Recipe</h2>\n            <RecipeForm\n              handleSubmit={handleSubmit}\n              recipe={recipe}\n            />\n          </div>:\n          <p>Error: Permission Denied</p>\n      }\n    </div>\n  );\n}\n\nexport default EditRecipeForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, ListGroup, ListGroupItem, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport helper from '../utils/helper';\n\n/**\n * Recipe list component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of recipe list component\n */\nfunction RecipeList({ recipes }) {\n  return (\n    <Row xs={1} md={2} lg={3} className=\"g-4\">\n      {recipes.map((recipe, index) => {\n        return (\n          <Col key={`recipeCard${index}`}>\n            <RecipeListItem recipe={recipe}/>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n}\n\nRecipeList.propTypes = {\n  recipes: PropTypes.array.isRequired,\n};\n\n/**\n * Recipe list item component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of recipe list item  component\n */\nfunction RecipeListItem({ recipe }) {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to={`/recipe/${recipe.id}`}>\n          <Card.Title>{recipe.name}</Card.Title>\n        </Link>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          By: {recipe.user.displayName}\n        </Card.Subtitle>\n        <Card.Text>\n          {recipe.shortDescription}\n        </Card.Text>\n      </Card.Body>\n      <ListGroup className=\"list-group-flush\">\n        <ListGroupItem>\n          Difficulty: {helper.getDifficultyText(recipe.difficulty)}\n        </ListGroupItem>\n        <ListGroupItem>\n          Estimated time: {recipe.estimatedMinutes} minutes\n        </ListGroupItem>\n      </ListGroup>\n    </Card>\n  );\n}\n\nRecipeListItem.propTypes = {\n  recipe: PropTypes.object.isRequired,\n};\n\nexport default RecipeList;\n","import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\n\nimport recipesService from '../services/recipes_service';\n\nimport RecipeList from './recipe_list_component';\n\n/**\n * Lastest recipe page component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of recipe list component\n */\nfunction LastestRecipesPage(props) {\n  const pageNumber = useParams().page_number ? useParams().page_number : 1;\n  const [prevPageNumber, setPrevPageNumber] = useState(null);\n  const [nextPageNumber, setNextPageNumber] = useState(null);\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(async () => {\n    setIsLoading(true);\n\n    const resultPagination =\n      await recipesService.getLastestRecipePagination(pageNumber);\n    const pagination = resultPagination.pagination;\n    const resultList = resultPagination.results;\n    setPrevPageNumber(pagination.pagePrev);\n    setNextPageNumber(pagination.pageNext);\n    setRecipes(resultList);\n\n    setIsLoading(false);\n  }, [pageNumber]);\n\n  return (\n    <div>\n      <h1>Lastest Recipes</h1>\n      {isLoading ?\n        <p>Loading...</p> :\n        <div>\n          <RecipeList recipes={recipes} />\n          <Row>\n            <Col sm={2}>\n              {prevPageNumber ?\n                <div className=\"d-grid gap-2\">\n                  <Link to={`/lastest-recipe/${prevPageNumber}`}>\n                    <Button\n                      variant='success'\n                      onClick={handleIngredientConcat}\n                    >\n                      Previous page\n                    </Button>\n                  </Link>\n                </div>:\n                ''\n              }\n            </Col>\n            <Col sm={8} />\n            <Col sm={2}>\n              {nextPageNumber ?\n                <div className=\"d-grid gap-2\">\n                  <Link to={`/lastest-recipe/${nextPageNumber}`}>\n                    <Button\n                      variant='success'\n                      onClick={handleIngredientConcat}\n                    >\n                      Next page\n                    </Button>\n                  </Link>\n                </div>:\n                ''\n              }\n            </Col>\n          </Row>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default LastestRecipesPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\n\nimport helper from '../utils/helper';\n\n/**\n * Recipe view form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of recipe view  component\n */\nfunction RecipeView({ recipe }) {\n  return (\n    <div>\n      <h2>{recipe.name}</h2>\n      <br/>\n      <h4>By: {recipe.user.displayName}</h4>\n      <h5>Difficulty: {helper.getDifficultyText(recipe.difficulty)}</h5>\n      <h5>Estimated time: {recipe.estimatedMinutes} minutes</h5>\n      <br/>\n      <p>{recipe.description}</p>\n      <br/>\n      <h3>Ingredients</h3>\n      <Table striped bordered hover>\n        <tbody>\n          {recipe.ingredients.map( (ingredient, index) => {\n            return (\n              <tr key={`ingredient${index}`}>\n                <td>{ingredient.name}</td>\n                <td>{ingredient.quantity}</td>\n                <td>{ingredient.unit}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <br/>\n      <h3>Steps</h3>\n      {recipe.steps.map( (step, index) => {\n        return (\n          <div key={`ingredient${index}`}>\n            <h4>{`Step ${index + 1}`}</h4>\n            <p>{step.description}</p>\n            { step.tip ? <p>Tips: {step.tip}</p> : ''}\n            { step.warning ? <p>Warning: {step.warning}</p> : ''}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRecipeView.propTypes = {\n  recipe: PropTypes.object.isRequired,\n};\n\nexport default RecipeView;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport RecipeView from './recipe_view_component';\n\nimport {\n  setNotification,\n  notificationTypeError,\n  notificationTypeConfirm,\n} from '../reducers/notification_reducer';\n\nimport recipesService from '../services/recipes_service';\n\n/**\n * Recipe view form component\n * @param {Object} props - component arguments\n * @return {JSX} jsx of recipe view  component\n */\nfunction RecipeViewById(props) {\n  const userState = useSelector((state) => {\n    return state.user;\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const recipeId = useParams().id;\n  const [recipe, setRecipe] = useState(null);\n  const [allowToEdit, setAllowToEdit] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(async () => {\n    setIsLoading(true);\n\n    const recipeResult =\n      await recipesService.getRecipeById(recipeId);\n    setRecipe(recipeResult);\n    setAllowToEdit(!!(userState.user &&\n      userState.user.id === recipeResult.user.id));\n\n    setIsLoading(false);\n  }, [recipeId, userState]);\n\n  /**\n   * Handle delete request\n   * @param {String} recipeId - recipe id\n   * @return {Boolean} register result\n   */\n  async function handleDelete(recipeId) {\n    try {\n      const userConfirm = confirm(\n        `Are you sure to delete recipe \"${recipe.name}\"?`);\n      if (!userConfirm) {\n        return;\n      }\n\n      await recipesService.remove(recipeId, userState.token);\n      dispatch(setNotification(\n        `Recipe \"${recipe.name}\" deleted!`,\n        notificationTypeConfirm,\n      ));\n      history.push('/');\n      return true;\n    } catch (exception) {\n      dispatch(setNotification(\n        `Failed to deleted recipe \"${recipe.name}\". ${exception.toString()}`,\n        notificationTypeError,\n      ));\n      return false;\n    }\n  }\n\n  return (\n    <div>\n      { isLoading ?\n        <p>Loading...</p> :\n        <div>\n          <RecipeView recipe={recipe} />\n          <br/>\n          { allowToEdit ?\n            <Row>\n              <Col sm={3}>\n                <Link to={`/edit-recipe/${recipe.id}`}>\n                  <div className=\"d-grid gap-2\">\n                    <Button variant='success'>\n                      Edit\n                    </Button>\n                  </div>\n                </Link>\n              </Col>\n              <Col sm={6} />\n              <Col sm={3}>\n                <div className=\"d-grid gap-2\">\n                  <Button\n                    variant='danger'\n                    onClick={handleDelete.bind(null, `${recipe.id}`)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              </Col>\n            </Row>:\n            ''\n          }\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default RecipeViewById;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Switch, Route, Redirect,\n} from 'react-router-dom';\n\nimport {\n  initializeUserAndToken,\n} from './reducers/user_reducer';\n\nimport Notification from './components/notification_component';\nimport NavBar from './components/navbar_component';\nimport LoginForm from './components/login_form_component';\nimport RegisterForm from './components/register_form_component';\nimport NewRecipeForm from './components/new_recipe_form_component';\nimport EditRecipeForm from './components/edit_recipe_form_component';\nimport LastestRecipesPage from './components/lastest_recipes_page_component';\nimport RecipeViewById from './components/recipe_view_by_id_component';\n\n/**\n * Main application of webapp.\n * @return {JSX} jsx of application\n */\nfunction App() {\n  const dispatch = useDispatch();\n  const userState = useSelector((state) => {\n    return state.user;\n  });\n\n  useEffect(async () => {\n    await dispatch(initializeUserAndToken());\n  }, [dispatch]);\n\n  return (\n    <div className='container'>\n      <NavBar />\n      <Notification />\n      <Switch>\n        <Route path='/lastest-recipe/:page_number'>\n          <LastestRecipesPage />\n        </Route>\n        <Route path='/recipe/:id'>\n          <RecipeViewById />\n        </Route>\n        <Route path='/edit-recipe/:id'>\n          <EditRecipeForm />\n        </Route>\n        <Route path='/login'>\n          {\n            userState.user ?\n              <Redirect to=\"/\" /> :\n              <LoginForm />\n          }\n        </Route>\n        <Route path='/register'>\n          {\n            userState.user ?\n              <Redirect to=\"/\" /> :\n              <RegisterForm />\n          }\n        </Route>\n        <Route path='/your-recipes'>\n          {\n            userState.user ?\n              <div>\n                <p>\n                  {userState.user.displayName.toString()}{'\\''}s recipes page.\n                </p>\n              </div>:\n              <Redirect to=\"/login\" />\n          }\n        </Route>\n        <Route path='/new-recipe'>\n          {\n            userState.user ?\n              <NewRecipeForm />:\n              <Redirect to=\"/login\" />\n          }\n        </Route>\n        <Route path='/'>\n          <h1>Main Page</h1>\n          {\n            userState.user ?\n              <div>\n                <p>Hello, {userState.user.displayName.toString()}.</p>\n              </div>:\n              <div>\n                <p>Welcome to recipes website.</p>\n              </div>\n          }\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport notificationReducer from './reducers/notification_reducer';\nimport userReducer from './reducers/user_reducer';\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  user: userReducer,\n});\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './app';\n\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}